AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EnvironmentName:
    Type: String
    Default: "stg"
  TemplateBucketName:
    Type: String
    Default: "knit-stg-cloud-formation-templates"
  VpcCidrBlock:
    Type: String
    Default: "10.2.0.0/16"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "Must be a valid CIDR block (e.g., 10.1.0.0/16)"
  LifecyclePolicyTextParameter:
    Type: String
    Default: '{"rules":[{"rulePriority":1,"description":"Removes untagged images after 5 days","selection":{"tagStatus":"untagged","countType":"sinceImagePushed","countUnit":"days","countNumber":5},"action":{"type":"expire"}},{"rulePriority":2,"description":"Keep latest 5 images and delete rest","selection":{"tagStatus":"tagged","tagPrefixList":["stg"],"countType":"imageCountMoreThan","countNumber":5},"action":{"type":"expire"}}]}'
  CognitoUserPoolId:
    Type: String
    Default: "us-east-1_5xWJGmm65"
  NexusDomainName:
    Type: String
    Default: "nexus.goknit.com"
  NexusPythonRepositoryName:
    Type: String
    Default: "knit-pypi-group"
  WindowsBastionKeyName:
    Type: String
  AcmCertificateId:
    Type: String
    Default: "f528617e-cabc-4771-afb9-553d1643afc6"
  GitBranchName:
    Type: String
    Default: "stg"
  RedisServerPassword:
    Type: String
    Description: Redis server password
    MinLength: 16
    MaxLength: 128
    AllowedPattern: '^[a-zA-Z0-9!@#%&*()_+=-]{16,128}$'
    NoEcho: true
  AdminLoginUrl:
    Type: String
  QualificationUrl:
     Type: String
  WebUrl:
    Type: String
  SurveyWebUrl:
    Type: String

Resources:
  S3:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/s3/base-s3-root.yaml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
  CloudWatch:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/cloudwatch/cloudwatch-base.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
  IAM:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - CloudWatch
      - S3
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/iam/iam-base.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
  SecretManager:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/secret/secret-manager.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  SQS:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/sqs/queue.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  NetworkingMainStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: IAM
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/networking/networking-main-stack.yml"
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        VpcCidrBlock: !Ref VpcCidrBlock
        AcmCertificateId: !Ref AcmCertificateId
  EC2MainStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkingMainStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/ec2/ec2-base-stack.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        WindowsBastionKeyName: !Ref WindowsBastionKeyName
  RedisServer:
    Type: AWS::CloudFormation::Stack
    DependsOn: EC2MainStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/redis-server/redis-server.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        RedisServerPassword: !Ref RedisServerPassword
  ECSCluster:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkingMainStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/ecs-cluster/ecs-cluster.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  ECSBaseStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ECSCluster
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/ecs-base-stack/ecs-base-stack.yml"
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        LifecyclePolicyTextParameter: !Ref LifecyclePolicyTextParameter
  ECSPublicServicesStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - ECSCluster
      - SecretManager
      - RedisServer
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/ecs-services/public-services/public-services-stack.yml"
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        CognitoUserPoolId: !Ref CognitoUserPoolId
        NexusDomainName: !Ref NexusDomainName
        NexusPythonRepositoryName: !Ref NexusPythonRepositoryName
        GitBranchName: !Ref GitBranchName
  ECSPrivateServicesStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ECSPublicServicesStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/ecs-services/private-services/private-services-stack.yml"
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        CognitoUserPoolId: !Ref CognitoUserPoolId
        NexusDomainName: !Ref NexusDomainName
        NexusPythonRepositoryName: !Ref NexusPythonRepositoryName
        GitBranchName: !Ref GitBranchName
  WebStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/web/web-main-stack.yml"
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        GitBranchName: !Ref GitBranchName
        AcmCertificateId: !Ref AcmCertificateId
        AdminLoginUrl: !Ref AdminLoginUrl
        QualificationUrl: !Ref QualificationUrl
        WebUrl: !Ref WebUrl
        SurveyWebUrl: !Ref SurveyWebUrl
  route53:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkingMainStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/route53/route_53_root.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
  Lambda:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkingMainStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/lambda/lambda-base-stack.yml"
      Tags:
        - Key: stackId
          Value: !Ref AWS::StackId
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        TemplateBucketName: !Ref TemplateBucketName
        NexusDomainName: !Ref NexusDomainName
        GitBranchName: !Ref GitBranchName
        NexusPythonRepositoryName: !Ref NexusPythonRepositoryName