AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation Script for ECS service and Task Definition"

Parameters:
  BucketName:
    Description: Kindly enter the name of the bucket containing environment files.
    Type: "String"
    Default: "knit-uat-backend-environment-files"
  ClusterName:
    Description: Kindly enter the name of ecs cluster.
    Type: "String"
    Default: "knit-backend-uat"
  ContainerName:
    Description: Kindly enter the name of the container
    Type: "String"
    Default: "knit-uat-highchart-exporter-container"
  FamilyName:
    Description: Kindly enter the name of the application so that it can be recognised in creating revisions
    Type: "String"
    Default: "knit-uat-highchart-exporter"
  Image:
    Description: Kindly enter the name of the image along with tag
    Type: "String"
  PortMapping:
    Description: Kindly enter the port number for your application
    Type: "Number"
    Default: "80"
  ServiceName:
    Description: Kindly enter the service name
    Type: "String"
    Default: "knit-uat-highchart-exporter"

Resources:
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref FamilyName
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/knit-uat-ecs-taskexecution-role'
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Ref Image
          EnvironmentFiles:
            - Type: "s3"
              Value:
                !Join [
                  "",
                  [
                    "arn:aws:s3:::",
                    !Ref BucketName,
                    "/",
                    !Ref ServiceName,
                    ".env",
                  ],
                ]
          PortMappings:
            - ContainerPort: !Ref PortMapping
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: knit-uat-ecs

  CloudwatchLogsGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Join
        - "-"
        - - ECSLogGroup
          - !Ref "AWS::StackName"
      RetentionInDays: 90

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: vpc-074bb0b6f81390144
      GroupDescription: for ecs containers
      SecurityGroupIngress:
        - SourceSecurityGroupId: sg-08ebd51af853f42d2
          IpProtocol: tcp
          FromPort: !Ref PortMapping
          ToPort: !Ref PortMapping

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: Discovery Service for the Application
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: !Ref ServiceName
      NamespaceId: ns-bv7iiulgtut55mya

  PublicService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref ServiceName
      TaskDefinition: !Ref Task
      Cluster: !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ClusterName}"
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - subnet-03f7e0d21159d4cfe
            - subnet-0ce07f51b93037168
          SecurityGroups:
            - !Ref PublicSecurityGroup
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryService.Arn
