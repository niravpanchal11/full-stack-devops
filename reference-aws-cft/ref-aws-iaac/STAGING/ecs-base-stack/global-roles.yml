---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EnvironmentName:
    Type: String

Resources:
  ArtifactBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "knit-${EnvironmentName}-global-artifact-store"

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub "knit-${EnvironmentName}-ecs-global-task-execution-role"
      # ManagedPolicyArns:
      #   - !ImportValue
      #       Fn::Sub: "Knit-${EnvironmentName}-deny-unused-regions-policy"
      Policies:
        - PolicyName: !Sub "knit-${EnvironmentName}-ecs-global-task-execution-role-policy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:DescribeRepositories
                  - ecr:GetRepositoryPolicy
                  - ecr:ListImages
                  - logs:CreateLogStream
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecs:CreateCluster
                  - ecs:DeregisterContainerInstance
                  - ecs:DiscoverPollEndpoint
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:StartTask
                  - ecs:StartTelemetrySession
                  - ecs:SubmitContainerStateChange
                  - ecs:SubmitTaskStateChange
                Resource:
                  - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/knit-backend-${EnvironmentName}"
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:ListAllMyBuckets
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - s3:Get*
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - !ImportValue
                          Fn::Sub: "knit-${EnvironmentName}-backend-environment-files"
                  - Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - !ImportValue
                          Fn::Sub: "knit-${EnvironmentName}-backend-environment-files"
                      - "/*"

  AutoscalingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "knit-${EnvironmentName}-global-auto-scaling-role"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [application-autoscaling.amazonaws.com]
          Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - !ImportValue
            Fn::Sub: "Knit-${EnvironmentName}-deny-unused-regions-policy"
      Policies:
      - PolicyName: !Sub "knit-${EnvironmentName}-auth-service-autoscaling-policy"
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - "application-autoscaling:*"
              - "cloudwatch:DescribeAlarms"
              - "cloudwatch:PutMetricAlarm"
              - "ecs:*"
            Resource: "*"

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "knit-${EnvironmentName}-code-pipeline-execution-role-test"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: 
                - "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - !ImportValue
            Fn::Sub: "Knit-${EnvironmentName}-deny-unused-regions-policy"
      Policies:
        - PolicyName: "MyIAMRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    "iam:PassedToService":
                      - "cloudformation.amazonaws.com"
                      - "elasticbeanstalk.amazonaws.com"
                      - "ec2.amazonaws.com"
                      - "ecs-tasks.amazonaws.com"
              - Effect: "Allow"
                Action:
                  - "codecommit:CancelUploadArchive"
                  - "codecommit:GetBranch"
                  - "codecommit:GetCommit"
                  - "codecommit:GetRepository"
                  - "codecommit:GetUploadArchiveStatus"
                  - "codecommit:UploadArchive"
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplication"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                  - "codestar-connections:UseConnection"
                  - "lambda:InvokeFunction"
                  - "lambda:ListFunctions"
                  - "opsworks:CreateDeployment"
                  - "opsworks:DescribeApps"
                  - "opsworks:DescribeCommands"
                  - "opsworks:DescribeDeployments"
                  - "opsworks:DescribeInstances"
                  - "opsworks:DescribeStacks"
                  - "opsworks:UpdateApp"
                  - "opsworks:UpdateStack"
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuildBatches"
                  - "codebuild:StartBuildBatch"
                  - "devicefarm:ListProjects"
                  - "devicefarm:ListDevicePools"
                  - "devicefarm:GetRun"
                  - "devicefarm:GetUpload"
                  - "devicefarm:CreateUpload"
                  - "devicefarm:ScheduleRun"
                  - "servicecatalog:ListProvisioningArtifacts"
                  - "servicecatalog:CreateProvisioningArtifact"
                  - "servicecatalog:DescribeProvisioningArtifact"
                  - "servicecatalog:DeleteProvisioningArtifact"
                  - "servicecatalog:UpdateProduct"
                  - "cloudformation:ValidateTemplate"
                  - "ecr:DescribeImages"
                  - "states:DescribeExecution"
                  - "states:DescribeStateMachine"
                  - "states:StartExecution"
                  - "appconfig:StartDeployment"
                  - "appconfig:StopDeployment"
                  - "appconfig:GetDeployment"
                  - "elasticbeanstalk:*"
                  - "ec2:*"
                  - "elasticloadbalancing:*"
                  - "autoscaling:*"
                  - "cloudwatch:*"
                  - "s3:*"
                  - "sns:*"
                  - "cloudformation:*"
                  - "rds:*"
                  - "sqs:*"
                  - "ecs:*"
                Resource: "*"

Outputs:
  ArtifactBucketName:
    Value: !Ref ArtifactBucket
    Export:
      Name: !Sub "knit-${EnvironmentName}-global-artifact-store"
  ECSTaskExecutionRole:
    Value: !Ref ECSTaskExecutionRole
    Export:
      Name: !Sub "knit-${EnvironmentName}-ecs-task-execution-role"
  AutoscalingRole:
    Value: !GetAtt AutoscalingRole.Arn
    Export:
      Name: !Sub "knit-${EnvironmentName}-ecs-task-autoscaling-role"
  CodePipelineExecutionRole:
    Value: !GetAtt CodePipelineExecutionRole.Arn
    Export:
      Name: !Sub "knit-${EnvironmentName}-code-pipeline-execution-role"
